import { Metadata } from "revolt-api";
import { API, Client } from "../index.js";
/**
 * Uploaded File
 */
export declare class File {
    #private;
    /**
     * File Id
     */
    readonly id: string;
    /**
     * File bucket
     */
    readonly tag: string;
    /**
     * Original filename
     */
    readonly filename?: string;
    /**
     * Parsed metadata of the file
     */
    readonly metadata: Metadata;
    /**
     * Raw content type of this file
     */
    readonly contentType?: string;
    /**
     * Size of the file (in bytes)
     */
    readonly size?: number;
    /**
     * Construct File
     * @param client Client
     * @param file File
     */
    constructor(client: Client, file: Pick<API.File, "_id" | "tag" | "metadata"> & Partial<API.File>);
    /**
     * Direct URL to the file
     */
    get url(): string;
    /**
     * Download URL for the file
     */
    get downloadURL(): string;
    /**
     * Human readable file size
     */
    get humanReadableSize(): string;
    /**
     * Whether this file should have a spoiler
     */
    get isSpoiler(): boolean;
    /**
     * Creates a URL to a given file with given options.
     * @param forceAnimation Returns GIF if applicable (for avatars/icons)
     * @returns Generated URL or nothing
     */
    createFileURL(forceAnimation?: boolean): string | undefined;
}
//# sourceMappingURL=File.d.ts.map