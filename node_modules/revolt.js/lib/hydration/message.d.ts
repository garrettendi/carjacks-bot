import { ReactiveMap } from "@solid-primitives/map";
import { ReactiveSet } from "@solid-primitives/set";
import type { Interactions, Masquerade, Message } from "revolt-api";
import { File } from "../classes/File.js";
import { MessageWebhook } from "../classes/Message.js";
import { MessageEmbed } from "../classes/MessageEmbed.js";
import { SystemMessage } from "../classes/SystemMessage.js";
import type { Merge } from "../lib/merge.js";
import type { Hydrate } from "./index.js";
export type HydratedMessage = {
    id: string;
    nonce?: string;
    channelId: string;
    authorId?: string;
    webhook?: MessageWebhook;
    content?: string;
    systemMessage?: SystemMessage;
    attachments?: File[];
    editedAt?: Date;
    embeds?: MessageEmbed[];
    mentionIds?: string[];
    replyIds?: string[];
    reactions: ReactiveMap<string, ReactiveSet<string>>;
    interactions?: Interactions;
    masquerade?: Masquerade;
    flags?: number;
};
export declare const messageHydration: Hydrate<Merge<Message>, HydratedMessage>;
//# sourceMappingURL=message.d.ts.map