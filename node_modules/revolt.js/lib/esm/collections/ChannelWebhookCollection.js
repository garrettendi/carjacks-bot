import { ChannelWebhook } from "../classes/ChannelWebhook.js";
import { ClassCollection } from "./index.js";
/**
 * Collection of Channel Webhooks
 */
export class ChannelWebhookCollection extends ClassCollection {
    /**
     * Fetch webhook by ID
     * @param id Id
     * @returns Webhook
     */
    async fetch(id) {
        const webhook = this.get(id);
        if (webhook)
            return webhook;
        // @ts-expect-error not in prod
        const data = await this.client.api.get(`/webhooks/${id}`);
        // @ts-expect-error not in prod
        return this.getOrCreate(data.id, data);
    }
    /**
     * Create webhook with ID and token
     * @param id Id
     * @param token Token
     * @returns Webhook
     */
    async fromToken(id, token) {
        const webhook = this.get(id);
        if (webhook)
            return webhook;
        const data = await this.client.api.get(
        // @ts-expect-error not in prod
        `/webhooks/${id}/${token}`);
        // @ts-expect-error not in prod
        return this.getOrCreate(data.id, data);
    }
    /**
     * Get or create
     * @param id Id
     * @param data Data
     */
    getOrCreate(id, data) {
        if (this.has(id)) {
            return this.get(id);
        }
        else {
            const instance = new ChannelWebhook(this, id);
            this.create(id, "channelWebhook", instance, this.client, data);
            return instance;
        }
    }
}
